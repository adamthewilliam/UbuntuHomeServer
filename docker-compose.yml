version: '3.9'

configs:
  tailscale-plex-serve-config.json:
    file: ./tailscale-plex-serve-config.json

networks:
  default:
    driver: bridge
  tailscale_network:
    driver: bridge

services:
  portainer:
    container_name: portainer
    image: portainer/portainer
    restart: always
    ports:
      - ${PORTAINER_PORT}:9000/tcp
    environment:
      - TZ=${TZ}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${DOCKER_CONFIG_DIR}/portainer:/data

  tailscale-plex:
    image: tailscale/tailscale:latest
    container_name: tailscale-plex
    hostname: plex
    environment:
      - TS_AUTHKEY=${TAILSCALE_PLEX_AUTH_KEY}
      - TS_STATE_DIR=/var/lib/tailscale
      - TS_USERSPACE=false
      - TS_EXTRA_ARGS=--advertise-tags=tag:container
      - TS_SERVE_CONFIG=/config/plex-serve-config.json
    volumes:
      - ${DOCKER_CONFIG_DIR}/tailscale-plex/state:/var/lib/tailscale
      - ${DOCKER_CONFIG_DIR}/tailscale-plex/config:/config
    devices:
      - /dev/net/tun:/dev/net/tun
    cap_add:
      - net_admin
      - sys_module
    ports:
      - "0.0.0.0:8100:32400" # Main plex port
      - "0.0.0.0:32400:32400"
      - "0.0.0.0:1909:1900/udp"
      - "0.0.0.0:3005:3005" 
      - "0.0.0.0:5555:5353/udp"
      - "0.0.0.0:8324:8324" 
      - "0.0.0.0:32410:32410/udp" 
      - "0.0.0.0:32412:32412/udp"  
      - "0.0.0.0:32413:32413/udp" 
      - "0.0.0.0:32414:32414/udp"  
      - "0.0.0.0:32469:32469"
    restart: unless-stopped

  plex:
    image: lscr.io/linuxserver/plex:latest
    container_name: plex
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - VERSION=docker
      - PLEX_CLAIM=
    volumes:
      - ${DOCKER_CONFIG_DIR}/plex/config:/config
      - ${MEDIA_DIR}
      - /dev/shm/plex:/transcode # To use RAM for transcoding
    devices:
      - /dev/dri:/dev/dri
    depends_on:
      - tailscale-plex
    network_mode: service:tailscale-plex
    restart: unless-stopped

  tailscale-overseerr:
    image: tailscale/tailscale:latest
    container_name: tailscale-overseerr
    hostname: overseerr
    environment:
      - TS_AUTHKEY=${TAILSCALE_OVERSEERR_AUTH_KEY}
      - TS_STATE_DIR=/var/lib/tailscale
      - TS_USERSPACE=false
      - TS_EXTRA_ARGS=--advertise-tags=tag:container
      - TS_SERVE_CONFIG=/config/overseerr-serve-config.json
    ports:
      - "0.0.0.0:5055:5055"
    volumes:
      - ${DOCKER_CONFIG_DIR}/tailscale-overseerr/state:/var/lib/tailscale
      - ${DOCKER_CONFIG_DIR}/tailscale-overseerr/config:/config
    devices:
      - /dev/net/tun:/dev/net/tun
    cap_add:
      - net_admin
      - sys_module
    restart: unless-stopped

  overseerr:
    image: lscr.io/linuxserver/overseerr:latest
    container_name: overseerr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${DOCKER_CONFIG_DIR}/overseerr/config:/config
    depends_on:
      - tailscale-overseerr
    network_mode: service:tailscale-overseerr
    restart: unless-stopped

  kometa:
    image: kometateam/kometa
    container_name: kometa
    environment:
      - TZ=${TZ}
    volumes:
      - ${DOCKER_CONFIG_DIR}/kometa/config:/config
    command: --run
    restart: unless-stopped

  ## Download clients ##
  transmission:
    container_name: transmission
    image: lscr.io/linuxserver/transmission:latest
    ports:
      - ${TRANSMISSION_WEBUI_PORT}:9091
      - ${TRANSMISSION_CONNECTION_PORT}:51413
      - ${TRANSMISSION_CONNECTION_PORT}:51413/udp
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
      - TRANSMISSION_WEBUI_USER=${TRANSMISSION_WEBUI_USER}
      - TRANSMISSION_WEBUI_PASS=${TRANSMISSION_WEBUI_PASS}
      - TRANSMISSION_WEBUI_PORT=${TRANSMISSION_WEBUI_PORT}
      - TRANSMISSION_MAX_RETENTION=${TRANSMISSION_MAX_RETENTION}
      - TRANSMISSION_MAX_RATIO=${TRANSMISSION_CONNECTION_PORT}
      - TRANSMISSION_CONNECTION_PORT=${TRANSMISSION_CONNECTION_PORT}
      - SONARR_API_KEY=${SONARR_API_KEY}
      - SONARR_PORT=${SONARR_PORT}
      - RADARR_API_KEY=${RADARR_API_KEY}
      - RADARR_PORT=${RADARR_PORT}
      - PEERPORT=${TRANSMISSION_CONNECTION_PORT}
    volumes:
      - ${DOCKER_CONFIG_DIR}/transmission/config:/config
      - ${TORRENTS_BASE_DIR}
    restart: unless-stopped

  sabnzbd:
    image: lscr.io/linuxserver/sabnzbd:latest
    container_name: sabnzbd
    environment:
      - PUID=${PUID}
      - PGID=${PUID}
      - TZ=${TZ}
    dns:
      - "1.1.1.1"
      - "1.0.0.1"
    volumes:
      - ${DOCKER_CONFIG_DIR}/sabnzbd/config:/config
      - ${USENET_BASE_DIR}
    ports:
      - ${SABNZBD}:${SABNZBD}
    restart: unless-stopped

## aars ##

  prowlarr:
    container_name: prowlarr
    image: lscr.io/linuxserver/prowlarr:latest
    ports:
      - ${PROWLARR_PORT}:${PROWLARR_PORT}
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${DOCKER_CONFIG_DIR}/prowlarr/config:/config
    dns:
      - "1.1.1.1"
      - "1.0.0.1"
    restart: unless-stopped

  radarr:
    container_name: radarr
    image: linuxserver/radarr:latest
    ports:
      - ${RADARR_PORT}:7878
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
    volumes:
      - ${DOCKER_CONFIG_DIR}/radarr/config:/config
      - ${BASE_DIR}
      - ${USENET_BASE_DIR}
    dns:
      - "1.1.1.1"
      - "1.0.0.1"
    restart: unless-stopped

  sonarr:
    container_name: sonarr
    image: linuxserver/sonarr:latest
    ports:
      - ${SONARR_PORT}:8989
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
    volumes:
      - ${DOCKER_CONFIG_DIR}/sonarr/config:/config
      - ${BASE_DIR}
      - ${USENET_BASE_DIR}
    dns:
      - "1.1.1.1"
      - "1.0.0.1"
    restart: unless-stopped

  bazarr:
    container_name: bazarr
    image: lscr.io/linuxserver/bazarr:latest
    ports:
      - ${BAZARR_PORT}:6767
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
    volumes:
      - ${DOCKER_CONFIG_DIR}/bazarr/config:/config
      - ${BASE_DIR}
    restart: unless-stopped

  tautulli:
    image: ghcr.io/tautulli/tautulli
    container_name: tautulli
    restart: unless-stopped
    volumes:
      - ${DOCKER_CONFIG_DIR}/tautulli/config:/config
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    ports:
      - ${TAUTULLI_PORT}:8181

  scrutiny:
    container_name: scrutiny
    image: ghcr.io/analogj/scrutiny:master-omnibus
    cap_add:
      - SYS_RAWIO
      - SYS_ADMIN
    ports:
      - "6090:8080" # webapp
      - "8086:8086" # influxDB admin
    volumes:
      - /run/udev:/run/udev:ro
      - ${DOCKER_CONFIG_DIR}/scrutiny/config:/config
      - ${DOCKER_CONFIG_DIR}/scrutiny/influxdb:/influxdb
    devices:
      - /dev/sda:/dev/sda    # 3.7TB external hard drive
      - /dev/sdb:/dev/sdb    # 9.1TB internal hard drive - HDD4
      - /dev/sdc:/dev/sdc    # 9.1TB internal hard drive - HDD3
      - /dev/sdza:/dev/sdza  # 953.9GB nvme ssd
      - /dev/sdzb:/dev/sdzb  # 953.9GB nvme ssd
    environment:
      - SCRUTINY_WEB_INFLUXDB_TOKEN=${SCRUTINY_WEB_INFLUX_DB_TOKEN}
      - SCRUTINY_WEB_INFLUXDB_INIT_USERNAME=${SCRUTINY_WEB_INFLUX_DB_INIT_USERNAME}
      - SCRUTINY_WEB_INFLUXDB_INIT_PASSWORD=${SCRUTINY_WEB_INFLUX_DB_INIT_PASSWORD}
    restart: unless-stopped